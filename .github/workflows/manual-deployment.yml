# This workflow can be used to manually trigger a build and deploy of any branch using a workflow_dispatch event.
name: Manually triggered deployment
run-name: Manual ${{ github.event.inputs.environment }} deploy of branch ${{ github.head_ref || github.ref_name }}

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy'
        required: true
        default: 'preprod'
        type: choice
        options:
          - none
          - preprod
          - prod

env:
  docker_image: ghcr.io/${{ github.repository }}:${{ github.sha }}

jobs:
  build:
    name: Build and push Docker container
    runs-on: ubuntu-latest
    steps:
      - name: Print deployment info
        shell: bash
        run: |
          echo "Deploying branch '${GITHUB_REF##*/}' to environment '${{ github.event.inputs.environment }}'"
      - uses: actions/checkout@v3
      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Read/save .m2 cache
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Set timezone
        uses: szenius/set-timezone@v1.1
        with:
            timezoneLinux: "Europe/Oslo"
      - name: Build with maven
        env:
          GITHUB_USERNAME: x-access-token
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: mvn install --file pom.xml -DskipTests
      - uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: ${{ env.docker_image }}

  deploy-preprod:
    name: Deploy to preprod
    needs: build
    if: github.event.inputs.environment == 'preprod'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: nais/nais-preprod.yml
          VARS: nais/sendsoknad-preprod.json
          VAR: image=${{ env.docker_image }}

  deploy-prod:
    name: Deploy to prod
    needs: build
    if: github.event.inputs.environment == 'prod'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          RESOURCE: nais/nais-prod.yml
          VARS: nais/sendsoknad.json
          VAR: image=${{ env.docker_image }}
